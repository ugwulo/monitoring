Install elasticsearch
enable on restart

# Configure data path
sudo mkdir -p /mnt/data/elasticsearch

sudo chown -R elasticsearch:elasticsearch /mnt/data/elasticsearch

sudo chmod -R 2750 /mnt/data/elasticsearch

sudo ls -l /mnt/data/elasticsearch

sudo chmod -R 2777 /nfs/export/cbs

do not start the service, only start when done with configs here: sudo nano /etc/elasticsearch/elasticsearch.yml


take note of elastic built-in superuser psswd : tadatada0B

or change it from here > 
sudo /usr/share/elasticsearch/bin/elasticsearch-reset-password -i -u elastic

-k flag skips verification due self signed certificate in use
curl -k -u elastic:passwd http://localhost:9200/_cat/nodes

curl -k -u elastic:gxxxay http://localhost:9200/_cluster/health?pretty

generate an enrollment token from node 1
sudo /usr/share/elasticsearch/bin/elasticsearch-create-enrollment-token -s node

sudo /usr/share/elasticsearch/bin/elasticsearch-create-enrollment-token -s kibana

# use atob("eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsixxxxxxxxxxxxOTIwMCJdLCJmZ3IiOiI3ZTgyMzk3M2YxZDFiNzlhNzA3OGJhODA1NjIzYjJjOGUzNTlmYjQxZDBmMWNiOGQzZTBiMTU0Yjk2ODQ5NDEwIiwia2V5IjoiLUdoVl9KUUJGdHExQxxxxxxxxxxxxxxx")
# to decode the token

# '{"ver":"8.14.0","adr":["10.150.65.6:9200"],
# "fgr":"xxxxxxxxxxxxx9fb41d0f1cb8d3e0b154b96849410",
# "key":"-xxxxxxxxtq1AFr2zieG:9qMBxxxxxxxxxxxxx0YhbiXw"}'

enroll nodes 2, 3 etc
do not configure the elasticsearch.yml yet

NG pilot-es-cluster
sudo /usr/share/elasticsearch/bin/elasticsearch-reconfigure-node --enrollment-token eyJ2ZXxxDJWUFl4bXRjQ1NEdyJ9

NG efk-ng-cluster
sudo /usr/share/elasticsearch/bin/elasticsearch-reconfigure-node --enrollment-token eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTAuMTQwLjkuODM6OTIwMCJdLCJmZ3IiOiI5MxxxMzA0NzNiYjYwNGFlNjgzOWEzIiwia2V5IjoicDhmVzRKVUJ5YktBVxxxE8wUSJ9

efk-gh-cluster
sudo /usr/share/elasticsearch/bin/elasticsearch-reconfigure-node --enrollment-token eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTAuMTQwLjkuOTk6OTIwMCJdLCJmZ3IiOiI2M2YxZmNkYWFkOTBlYzJhMzBhNDc2OWY4ZmE2ZWUxxxoiby1VSzU1VUJLS0xEZFBOYUdhOGM6aDFGVl9Hdxxx

gh-prod-es-cluster
sudo /usr/share/elasticsearch/bin/elasticsearch-reconfigure-node --enrollment-token eyJ2ZXIiOiI4LjE0LjAxxxxImc2cGNCcFlCa0xQTTA2YWdoXzNPOlNCaG5RWWlBU3gybFVrUmx3R2ktS1EifQ==

gh-pilot-es-cluster
sudo /usr/share/elasticsearch/bin/elasticsearch-reconfigure-node --enrollment-token eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTAuMTQwLjkuNzE6OTIwMCJdLCJmZ3IiOiI5Njg2N2FhYzk4xxxxMjg3MWJjZGU3NzkwIiwia2V5IjoiUmJOVTU1VUJNWGRudW5uOGpxxx


# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
cluster.name: efk-gh-cluster
#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
#
node.name: node1
#

#
path.data: /mnt/data/elasticsearch

#
# Path to log files:
#
path.logs: /var/log/elasticsearch
#
# ----------------------------------- Memory -----------------------------------

#
network.host: 0.0.0.0
#
# By default Elasticsearch listens for HTTP traffic on the first free port it
# finds starting at 9200. Set a specific HTTP port here:
#
http.port: 9200


discovery.seed_hosts: ["x8:9300", "10.1x.61:9300", "10x5.55:9300"]
#
# Bootstrap the cluster using an initial set of master-eligible nodes:
#

cluster.initial_master_nodes: ["node1"]


# Enable security features
xpack.security.enabled: true

xpack.security.enrollment.enabled: true

# Enable encryption for HTTP API client connections, such as Kibana, Logstash, and Agents
xpack.security.http.ssl:
  enabled: true
  keystore.path: certs/http.p12

# Enable encryption and mutual authentication between cluster nodes
xpack.security.transport.ssl:
  enabled: true
  verification_mode: certificate
  keystore.path: certs/transport.p12
  truststore.path: certs/transport.p12

# cluster.initial_master_nodes: ["node1"]
http.host: 0.0.0.0

#----------------------- END SECURITY AUTO CONFIGURATION -------------------------

network.tcp.keep_alive: true
network.tcp.keep_idle: 270
network.tcp.keep_interval: 270
network.tcp.keep_count: 3
transport.ping_schedule: "270s"

# For VMs
net.ipv4.tcp_fin_timeout = 60
net.ipv4.tcp_keepalive_intvl = 15
net.ipv4.tcp_keepalive_time = 300
net.ipv4.tcp_keepalive_probes = 6
 
 
sudo sysctl -w net.ipv4.tcp_fin_timeout=60
sudo sysctl -w net.ipv4.tcp_keepalive_intvl=15
sudo sysctl -w net.ipv4.tcp_keepalive_time=300
sudo sysctl -w net.ipv4.tcp_keepalive_probes=6

sudo sysctl -w net.ipv4.tcp_fin_timeout=60 net.ipv4.tcp_keepalive_intvl=15 net.ipv4.tcp_keepalive_time=300 net.ipv4.tcp_keepalive_probes=6
